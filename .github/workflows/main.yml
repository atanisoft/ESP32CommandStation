name: Build

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 3
      matrix:
        target: [esp32-v43, esp32-v44, esp32-v44-pcb, esp32-v5, esp32-v5-pcb, esp32s3-v44, esp32s3-v44-pcb, esp32s3-v5, esp32s3-v5-pcb]
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
          fetch-depth: 0
      - uses: jungwinter/split@v2
        id: target
        with:
          msg: ${{ matrix.target }}
          separator: '-'
      - name: Remove build artifacts
        run: |
          rm -rf build sdkconfig
      - name: Build (IDF v5)
        uses: atanisoft/esp-idf-ci-action@main
        with:
          target: ${{ steps.target.outputs._0 }}
        if: ${{ steps.target.outputs._1 == 'v5' }}
      - uses: finnp/create-file-action@master
        env:
          FILE_NAME: 'sdkconfig'
          FILE_DATA: 'CONFIG_ESP_MODEL_HBRIDGE_PCB_ESP32=y'
        if: ${{ steps.target.outputs._0 == 'esp32' && steps.target.outputs._2 == 'pcb' }}
      - uses: finnp/create-file-action@master
        env:
          FILE_NAME: 'sdkconfig'
          FILE_DATA: 'CONFIG_ESP_MODEL_HBRIDGE_PCB_ESP32S3=y'
        if: ${{ steps.target.outputs._0 == 'esp32s3' && steps.target.outputs._2 == 'pcb' }}
      - name: Build (IDF v4.4)
        uses: atanisoft/esp-idf-ci-action@release-v4.4
        with:
          target: ${{ steps.target.outputs._0 }}
        if: ${{ steps.target.outputs._1 == 'v44' }}
      - name: Build (IDF v4.3)
        uses: espressif/esp-idf-ci-action@release-v4.3
        if: ${{ steps.target.outputs._1 == 'v43' }}
      - name: Prepare Binaries
        run: |
          mkdir -p binaries
          cp .github/firmwarereadme.txt binaries/readme.txt
          cp build/ESP32CommandStation.bin binaries
          cp build/partition_table/partition-table.bin binaries
          cp build/ota_data_initial.bin binaries
          cp build/bootloader/bootloader.bin binaries
      - name: Package binaries
        uses: actions/upload-artifact@v1
        with:
          name: ESP32CommandStation-${{ matrix.target }}
          path: binaries
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}